# Generated by Django 5.2.3 on 2025-06-16 18:56

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('patients', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MedicalRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('encounter_date', models.DateTimeField(auto_now_add=True)),
                ('chief_complaint', models.TextField(help_text='Основная жалоба пациента')),
                ('diagnosis', models.TextField(blank=True)),
                ('treatment_plan', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True, help_text='Дополнительные заметки врача')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('doctor', models.ForeignKey(limit_choices_to={'user_type__in': ['doctor']}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='authored_patient_medical_records', to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_medical_records', to='patients.patient')),
            ],
            options={
                'ordering': ['-encounter_date'],
            },
        ),
        migrations.CreateModel(
            name='MedicalHistoryItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry_type', models.CharField(choices=[('condition', 'Состояние/Заболевание'), ('surgery', 'Операция'), ('family_history', 'Семейный анамнез'), ('lifestyle', 'Образ жизни'), ('other', 'Другое')], max_length=20)),
                ('description', models.TextField()),
                ('date_occurred', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('medical_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_history_items', to='patients.medicalrecord')),
            ],
        ),
        migrations.CreateModel(
            name='PatientDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_name', models.CharField(max_length=255)),
                ('file', models.FileField(upload_to='patient_documents/%Y/%m/%d/')),
                ('description', models.TextField(blank=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('medical_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_documents', to='patients.medicalrecord')),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='uploaded_patient_docs', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PrescribedMedication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medication_name', models.CharField(max_length=255)),
                ('dosage', models.CharField(help_text='Например, 500мг, 1 таблетка', max_length=100)),
                ('frequency', models.CharField(help_text='Например, 2 раза в день, перед едой', max_length=100)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('instructions', models.TextField(blank=True, help_text='Дополнительные инструкции по приему')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('medical_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_prescriptions', to='patients.medicalrecord')),
            ],
        ),
        migrations.CreateModel(
            name='VitalSign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('measurement_time', models.DateTimeField(auto_now_add=True)),
                ('blood_pressure_systolic', models.PositiveIntegerField(blank=True, help_text='Верхнее давление (мм рт.ст.)', null=True)),
                ('blood_pressure_diastolic', models.PositiveIntegerField(blank=True, help_text='Нижнее давление (мм рт.ст.)', null=True)),
                ('heart_rate', models.PositiveIntegerField(blank=True, help_text='Пульс (уд/мин)', null=True)),
                ('temperature_celsius', models.DecimalField(blank=True, decimal_places=1, help_text='Температура (°C)', max_digits=4, null=True)),
                ('respiratory_rate', models.PositiveIntegerField(blank=True, help_text='Частота дыхания (вдохов/мин)', null=True)),
                ('oxygen_saturation', models.DecimalField(blank=True, decimal_places=1, help_text='Сатурация кислорода (%)', max_digits=4, null=True)),
                ('height_cm', models.DecimalField(blank=True, decimal_places=1, help_text='Рост (см)', max_digits=5, null=True)),
                ('weight_kg', models.DecimalField(blank=True, decimal_places=1, help_text='Вес (кг)', max_digits=5, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('medical_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_vital_signs', to='patients.medicalrecord')),
            ],
        ),
    ]
